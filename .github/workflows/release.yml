name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.8.3'

      - name: Install dependencies
        run: poetry install
        shell: bash

      - name: Build wheel for lib
        run: poetry run maturin build
        shell: bash

      - name: Upload wheel
        if: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
        uses: actions/upload-artifact@v4
        with:
          name: keygen-py-whl-${{ matrix.os }}-${{ matrix.python-version }}
          path: target/wheels/keygen_py-*.whl

  consolidate:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    if: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.8.3'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: keygen-py-whl-*
          merge-multiple: 'true'
          path: dist/

      - name: Install dependencies (maturin)
        run: poetry install
        shell: bash

      - name: Publish to pypi
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        run: poetry run maturin upload dist/*

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          toTag: ${{ github.sha }}
          ignorePreReleases: 'true'
          configurationJson: |
            {
              "template": "## Release ${{ steps.pyproject_version.outputs.version }}\n\n#{{CHANGELOG}}",
              "categories": [
                {
                    "title": "### Changes",
                    "labels": []
                }
              ]
            }

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          tag_name: ${{ steps.pyproject_version.outputs.version }}
